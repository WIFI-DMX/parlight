C51 COMPILER V9.00   IAP_BYTE                                                              07/01/2019 15:07:34 PAGE 1   


C51 COMPILER V9.00, COMPILATION OF MODULE IAP_BYTE
OBJECT MODULE PLACED IN .\Output\IAP_BYTE.obj
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.EXE Code\IAP_BYTE.c OPTIMIZE(0,SPEED) BROWSE INCDIR(.\Include;.\Code;.\drv;..\.
                    -.\app\drive) DEFINE(FOSC_160000) DEBUG OBJECTEXTEND PRINT(.\LST\IAP_BYTE.lst) OBJECT(.\Output\IAP_BYTE.obj)

line level    source

   1          /*--------------------------------------------------------------------------------------------------------
             --*/
   2          /*                                                                                                        
             - */
   3          /* Copyright(c) 2016 Nuvoton Technology Corp. All rights reserved.                                        
             - */
   4          /*                                                                                                        
             - */
   5          /*--------------------------------------------------------------------------------------------------------
             --*/
   6          
   7          //********************************************************************************************************
             -***
   8          //  Nuvoton Technoledge Corp. 
   9          //  Website: http://www.nuvoton.com
  10          //  E-Mail : MicroC-8bit@nuvoton.com
  11          //  Date   : Apr/21/2016
  12          //********************************************************************************************************
             -***
  13          
  14          //********************************************************************************************************
             -***
  15          //  File Function: N76E003 APROM program DATAFLASH as EEPROM way 
  16          //********************************************************************************************************
             -***
  17          #include "main.h"
  18          
  19          bit BIT_TMP;
  20          
  21          //-------------------------------------------------------------------------
  22          UINT8 read_APROM_BYTE(UINT16 code *u16_addr)
  23          {
  24   1              UINT8 rdata;
  25   1              rdata = *u16_addr>>8;
  26   1              return rdata;
  27   1      }
  28          //-------------------------------------------------------------------------
  29           //WIFI-DMX.COM
  30          
  31          /*********************************************************************************************************
             -********
  32          write_DATAFLASH_BYTE :
  33          user can copy all this subroutine into project, then call this function in main.
  34          **********************************************************************************************************
             -********/                
  35          void write_DATAFLASH_BYTE(UINT16 xdata u16_addr,UINT8 xdata u8_data)
  36          {
  37   1              UINT8 looptmp=0,u8_addrl_r;
  38   1              unsigned char code *cd_longaddr;
  39   1              unsigned char xdata *xd_tmp;
  40   1              
  41   1      //Check page start address
  42   1              u8_addrl_r = u16_addr;
  43   1              if (u8_addrl_r<0x80)
C51 COMPILER V9.00   IAP_BYTE                                                              07/01/2019 15:07:34 PAGE 2   

  44   1              {
  45   2                      u8_addrl_r = 0;
  46   2              }
  47   1              else 
  48   1              {
  49   2                      u8_addrl_r = 0x80;
  50   2              }
  51   1      //Save APROM data to XRAM
  52   1              xd_tmp = 0x80;
  53   1              cd_longaddr = (u16_addr&0xff00)+u8_addrl_r;     
  54   1              while (xd_tmp !=0x100)
  55   1              {
  56   2                      *xd_tmp = *cd_longaddr;
  57   2                      looptmp++;
  58   2                      xd_tmp++;
  59   2                      cd_longaddr++;
  60   2              }
  61   1      // Modify customer data in XRAM
  62   1              u8_addrl_r = u16_addr;
  63   1              if (u8_addrl_r<0x80)
  64   1              {
  65   2                      xd_tmp = u8_addrl_r+0x80;
  66   2              }
  67   1              else
  68   1              {
  69   2                      xd_tmp = u8_addrl_r+0;
  70   2              }
  71   1              *xd_tmp = u8_data;
  72   1      //Erase APROM DATAFLASH page
  73   1              IAPAL = u16_addr;
  74   1              IAPAH = u16_addr>>8;
  75   1              IAPFD = 0xFF;
  76   1              set_IAPEN; 
  77   1              set_APUEN;
  78   1              IAPCN = 0x22;           
  79   1              set_IAPGO; 
  80   1      //Save changed RAM data to APROM DATAFLASH
  81   1              u8_addrl_r = u16_addr;
  82   1              if (u8_addrl_r<0x80)
  83   1              {
  84   2                      u8_addrl_r =0;
  85   2              }
  86   1              else
  87   1              {
  88   2                      u8_addrl_r = 0x80;
  89   2              }
  90   1              xd_tmp = 0x80;
  91   1              IAPAL = u8_addrl_r;
  92   1              IAPAH = u16_addr>>8;
  93   1              set_IAPEN; 
  94   1              set_APUEN;
  95   1              IAPCN = 0x21;
  96   1              while (xd_tmp !=0xFF)
  97   1              {
  98   2                      IAPFD = *xd_tmp;
  99   2                      set_IAPGO;
 100   2                      IAPAL++;
 101   2                      xd_tmp++;
 102   2              }
 103   1              clr_APUEN;
 104   1              clr_IAPEN;
 105   1      }       
C51 COMPILER V9.00   IAP_BYTE                                                              07/01/2019 15:07:34 PAGE 3   

 106          /*********************************************************************************************************
             -*********/                
 107          
 108          
 109          //void DataFlashCheck(void) 
 110          //{
 111          //      UINT8 datatemp;
 112          /* -------------------------------------------------------------------------*/
 113          /*  Dataflash use APROM area                                                                                                        */
 114          /*      APROM 0x3800~0x38FF demo as dataflash                                                                                   */
 115          /* Please use Memory window key in C:0x3800 to check earse result                                         */          
 116          /* -------------------------------------------------------------------------*/
 117                  
 118          ////call write byte 
 119          //      write_DATAFLASH_BYTE(DATA_START_ADDR,0x55);
 120          ////call read byte
 121          //      datatemp = read_APROM_BYTE(DATA_START_ADDR);
 122          //    while(datatemp != 0x55);
 123          //
 124          //      write_DATAFLASH_BYTE (0x4202,0x56);
 125          ////call read byte
 126          //      datatemp = read_APROM_BYTE(0x4202);
 127          //    while(datatemp != 0x56);
 128          //
 129          //      write_DATAFLASH_BYTE (0x4203,0x57);
 130          ////call read byte
 131          //      datatemp = read_APROM_BYTE(0x4203);
 132          //    while(datatemp != 0x57);
 133          //}
 134          //--------------------------------------------------------------------------------------------------------
             ----


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    421    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     12    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =      1    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
