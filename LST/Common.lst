C51 COMPILER V9.00   COMMON                                                                07/01/2019 15:07:35 PAGE 1   


C51 COMPILER V9.00, COMPILATION OF MODULE COMMON
OBJECT MODULE PLACED IN .\Output\Common.obj
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.EXE Common\Common.c OPTIMIZE(0,SPEED) BROWSE INCDIR(.\Include;.\Code;.\drv;..\.
                    -.\app\drive) DEFINE(FOSC_160000) DEBUG OBJECTEXTEND PRINT(.\LST\Common.lst) OBJECT(.\Output\Common.obj)

line level    source

   1          /*--------------------------------------------------------------------------------------------------------
             --*/
   2          /*                                                                                                        
             - */
   3          /* Copyright(c) 2016 Nuvoton Technology Corp. All rights reserved.                                        
             - */
   4          /*                                                                                                        
             - */
   5          /*--------------------------------------------------------------------------------------------------------
             --*/
   6          
   7          //********************************************************************************************************
             -***
   8          //  Nuvoton Technoledge Corp. 
   9          //  Website: http://www.nuvoton.com
  10          //  E-Mail : MicroC-8bit@nuvoton.com
  11          //  Date   : Apr/21/2016
  12          //********************************************************************************************************
             -***
  13          
  14          #include <stdio.h>
  15          #include "N76E003.h"
  16          #include "Common.h"
  17          #include "Delay.h"
  18          #include "SFR_Macro.h"
  19          #include "Function_Define.h"
  20          
  21          //----------------------------------------------------------------------------------
  22          // use timer1 as Baudrate generator, Maxmum Baudrate can ???? bps @ 16MHZ
  23          //----------------------------------------------------------------------------------
  24          //void InitialUART0_Timer1(UINT32 u32Baudrate)    //T1M = 1, SMOD = 1
  25          //{
  26          //      P06_Quasi_Mode;
  27          //      P07_Quasi_Mode;
  28          //      
  29          //    SCON = 0x52;     //UART0 Mode1,REN=1,TI=1
  30          //    TMOD |= 0x20;    //Timer1 Mode1
  31          //    
  32          //    set_SMOD;        //UART0 Double Rate Enable
  33          //    set_T1M;
  34          //    clr_BRCK;        //Serial port 0 baud rate clock source = Timer1
  35          //
  36          // 
  37          //#ifdef FOSC_160000
  38          //    TH1 = 256 - (1000000/u32Baudrate+1);               /*16 MHz */
  39          //#endif        
  40          //#ifdef FOSC_221184
  41          //    TH1 = 256 - (1382400/u32Baudrate);              /*22.1184 MHz */
  42          //#endif
  43          //    set_TR1;
  44          //}
  45          //---------------------------------------------------------------
  46          void InitialUART0_Timer3(UINT32 u32Baudrate) //use timer3 as Baudrate generator
  47          {
C51 COMPILER V9.00   COMMON                                                                07/01/2019 15:07:35 PAGE 2   

  48   1              P06_Quasi_Mode;
  49   1              P07_Quasi_Mode; 
  50   1              
  51   1          SCON = 0x52;     //UART0 Mode1,REN=1,TI=1
  52   1          set_SMOD;        //UART0 Double Rate Enable
  53   1          T3CON &= 0xF8;   //T3PS2=0,T3PS1=0,T3PS0=0(Prescale=1)
  54   1          set_BRCK;        //UART0 baud rate clock source = Timer3
  55   1      
  56   1      #ifdef FOSC_160000
  57   1                      RH3    = HIBYTE(65536 - (1000000/u32Baudrate)-1);               /*16 MHz */
  58   1                      RL3    = LOBYTE(65536 - (1000000/u32Baudrate)-1);                       /*16 MHz */
  59   1      #endif
  60   1      #ifdef FOSC_221184
                  RH3    = HIBYTE(65536 - (1382400/u32Baudrate));     /*22.1184 MHz */
                  RL3    = LOBYTE(65536 - (1382400/u32Baudrate));     /*22.1184 MHz */
              #endif
  64   1          set_TR3;         //Trigger Timer3
  65   1      }
  66          /*
  67          UINT8 Receive_Data_From_UART0(void)
  68          {
  69              UINT8 c;
  70              
  71              while (!RI);
  72              c = SBUF;
  73              RI = 0;
  74              return (c);
  75          }
  76          
  77          void Send_Data_To_UART0 (UINT8 c)
  78          {
  79              TI = 0;
  80              SBUF = c;
  81              while(TI==0);
  82          }
  83          */
  84          
  85          //---------------------------------------------------------------
  86          //void InitialUART1_Timer3(UINT32 u32Baudrate) //use timer3 as Baudrate generator
  87          //{
  88          //      P02_Quasi_Mode;
  89          //      P16_Quasi_Mode;
  90          //      
  91          //        SCON_1 = 0x52;   //UART1 Mode1,REN_1=1,TI_1=1
  92          //    T3CON &= 0xF8;   //T3PS2=0,T3PS1=0,T3PS0=0(Prescale=1)
  93          //#ifdef FOSC_110592
  94          //    RH3    = HIBYTE(65536 - (691200/u32Baudrate));  /*11.0592 MHz */
  95          //    RL3    = LOBYTE(65536 - (691200/u32Baudrate));  /*11.0592 MHz */
  96          //#endif
  97          //#ifdef FOSC_184320
  98          //    RH3    = HIBYTE(65536 - (1152000/u32Baudrate)); /*18.4320 MHz */
  99          //    RL3    = LOBYTE(65536 - (1152000/u32Baudrate)); /*18.4320 MHz */
 100          //#endif
 101          //#ifdef FOSC_160000
 102          //              RH3    = HIBYTE(65536 - (1000000/u32Baudrate)-1);               /*16 MHz */
 103          //              RL3    = LOBYTE(65536 - (1000000/u32Baudrate)-1);                       /*16 MHz */
 104          //#endif
 105          //#ifdef FOSC_200000
 106          //    RH3    = HIBYTE(65536 - (1250000/u32Baudrate)); /*20.0000 MHz */
 107          //    RL3    = LOBYTE(65536 - (1250000/u32Baudrate)); /*20.0000 MHz */
 108          //#endif
 109          //#ifdef FOSC_221184
C51 COMPILER V9.00   COMMON                                                                07/01/2019 15:07:35 PAGE 3   

 110          //    RH3    = HIBYTE(65536 - (1382400/u32Baudrate));   /*22.1184 MHz */
 111          //    RL3    = LOBYTE(65536 - (1382400/u32Baudrate));   /*22.1184 MHz */
 112          //#endif
 113          //    set_TR3;         //Trigger Timer3
 114          //}
 115          /*
 116           //WIFI-DMX.COM
 117          UINT8 Receive_Data_From_UART1(void)
 118          {
 119              UINT8 c;
 120              
 121              while (!RI_1);
 122              c = SBUF_1;
 123              RI_1 = 0;
 124              return (c);
 125          }
 126          
 127          void Send_Data_To_UART1 (UINT8 c)
 128          {
 129              TI_1 = 0;
 130              SBUF_1 = c;
 131              while(TI_1==0);
 132          }
 133          
 134          
 135          #ifdef SW_Reset
 136          void SW_Reset(void)
 137          {
 138              TA = 0xAA;
 139              TA = 0x55;
 140              set_SWRST;
 141          }
 142          #endif
 143          
 144          */


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    145    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      4    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
